// Generated by Dagger (https://dagger.dev).
package com.example.torangrepository.repository.impl;

import android.content.Context;
import com.example.torang_core.data.dao.LoggedInUserDao;
import com.example.torangrepository.services.RestaurantService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginRepositoryImpl_Factory implements Factory<LoginRepositoryImpl> {
  private final Provider<Context> contextProvider;

  private final Provider<RestaurantService> restaurantServiceProvider;

  private final Provider<LoggedInUserDao> loggedInUserDaoProvider;

  public LoginRepositoryImpl_Factory(Provider<Context> contextProvider,
      Provider<RestaurantService> restaurantServiceProvider,
      Provider<LoggedInUserDao> loggedInUserDaoProvider) {
    this.contextProvider = contextProvider;
    this.restaurantServiceProvider = restaurantServiceProvider;
    this.loggedInUserDaoProvider = loggedInUserDaoProvider;
  }

  @Override
  public LoginRepositoryImpl get() {
    return newInstance(contextProvider.get(), restaurantServiceProvider.get(), loggedInUserDaoProvider.get());
  }

  public static LoginRepositoryImpl_Factory create(Provider<Context> contextProvider,
      Provider<RestaurantService> restaurantServiceProvider,
      Provider<LoggedInUserDao> loggedInUserDaoProvider) {
    return new LoginRepositoryImpl_Factory(contextProvider, restaurantServiceProvider, loggedInUserDaoProvider);
  }

  public static LoginRepositoryImpl newInstance(Context context,
      RestaurantService restaurantService, LoggedInUserDao loggedInUserDao) {
    return new LoginRepositoryImpl(context, restaurantService, loggedInUserDao);
  }
}
