// Generated by Dagger (https://dagger.dev).
package com.example.torangrepository.di;

import com.example.torang_core.data.AppDatabase;
import com.example.torang_core.data.dao.RestaurantDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideRestaurantDaoFactory implements Factory<RestaurantDao> {
  private final DatabaseModule module;

  private final Provider<AppDatabase> appDatabaseProvider;

  public DatabaseModule_ProvideRestaurantDaoFactory(DatabaseModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public RestaurantDao get() {
    return provideRestaurantDao(module, appDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideRestaurantDaoFactory create(DatabaseModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    return new DatabaseModule_ProvideRestaurantDaoFactory(module, appDatabaseProvider);
  }

  public static RestaurantDao provideRestaurantDao(DatabaseModule instance,
      AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideRestaurantDao(appDatabase));
  }
}
