// Generated by Dagger (https://dagger.dev).
package com.example.torangrepository;

import com.example.torang_core.data.dao.FeedDao;
import com.example.torang_core.data.dao.LoggedInUserDao;
import com.example.torang_core.data.dao.UserDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProfileRepositoryImpl_Factory implements Factory<ProfileRepositoryImpl> {
  private final Provider<LoggedInUserDao> loggedUserDaoProvider;

  private final Provider<UserDao> userDaoProvider;

  private final Provider<FeedDao> feedDaoProvider;

  public ProfileRepositoryImpl_Factory(Provider<LoggedInUserDao> loggedUserDaoProvider,
      Provider<UserDao> userDaoProvider, Provider<FeedDao> feedDaoProvider) {
    this.loggedUserDaoProvider = loggedUserDaoProvider;
    this.userDaoProvider = userDaoProvider;
    this.feedDaoProvider = feedDaoProvider;
  }

  @Override
  public ProfileRepositoryImpl get() {
    return newInstance(loggedUserDaoProvider.get(), userDaoProvider.get(), feedDaoProvider.get());
  }

  public static ProfileRepositoryImpl_Factory create(
      Provider<LoggedInUserDao> loggedUserDaoProvider, Provider<UserDao> userDaoProvider,
      Provider<FeedDao> feedDaoProvider) {
    return new ProfileRepositoryImpl_Factory(loggedUserDaoProvider, userDaoProvider, feedDaoProvider);
  }

  public static ProfileRepositoryImpl newInstance(LoggedInUserDao loggedUserDao, UserDao userDao,
      FeedDao feedDao) {
    return new ProfileRepositoryImpl(loggedUserDao, userDao, feedDao);
  }
}
