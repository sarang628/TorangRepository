// Generated by Dagger (https://dagger.dev).
package com.example.torangrepository;

import android.content.Context;
import com.example.torang_core.data.dao.SearchDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchRepositoryImpl_Factory implements Factory<SearchRepositoryImpl> {
  private final Provider<Context> contextProvider;

  private final Provider<SearchDao> searchDaoProvider;

  public SearchRepositoryImpl_Factory(Provider<Context> contextProvider,
      Provider<SearchDao> searchDaoProvider) {
    this.contextProvider = contextProvider;
    this.searchDaoProvider = searchDaoProvider;
  }

  @Override
  public SearchRepositoryImpl get() {
    return newInstance(contextProvider.get(), searchDaoProvider.get());
  }

  public static SearchRepositoryImpl_Factory create(Provider<Context> contextProvider,
      Provider<SearchDao> searchDaoProvider) {
    return new SearchRepositoryImpl_Factory(contextProvider, searchDaoProvider);
  }

  public static SearchRepositoryImpl newInstance(Context context, SearchDao searchDao) {
    return new SearchRepositoryImpl(context, searchDao);
  }
}
