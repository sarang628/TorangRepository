// Generated by Dagger (https://dagger.dev).
package com.example.torangrepository;

import android.content.Context;
import com.example.torang_core.data.dao.LoggedInUserDao;
import com.example.torang_core.data.dao.RestaurantDao;
import com.example.torang_core.data.dao.ReviewDao;
import com.example.torang_core.data.dao.UserDao;
import com.example.torangrepository.repository.impl.MyReviewRepositoryImpl;
import com.example.torangrepository.services.RestaurantService;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyReviewRepositoryImpl_Factory implements Factory<MyReviewRepositoryImpl> {
  private final Provider<Context> contextProvider;

  private final Provider<ReviewDao> reviewDaoProvider;

  private final Provider<RestaurantService> restaurantServiceProvider;

  private final Provider<UserDao> userDaoProvider;

  private final Provider<RestaurantDao> restaurantDaoProvider;

  private final Provider<LoggedInUserDao> loggedInUserDaoProvider;

  public MyReviewRepositoryImpl_Factory(Provider<Context> contextProvider,
      Provider<ReviewDao> reviewDaoProvider, Provider<RestaurantService> restaurantServiceProvider,
      Provider<UserDao> userDaoProvider, Provider<RestaurantDao> restaurantDaoProvider,
      Provider<LoggedInUserDao> loggedInUserDaoProvider) {
    this.contextProvider = contextProvider;
    this.reviewDaoProvider = reviewDaoProvider;
    this.restaurantServiceProvider = restaurantServiceProvider;
    this.userDaoProvider = userDaoProvider;
    this.restaurantDaoProvider = restaurantDaoProvider;
    this.loggedInUserDaoProvider = loggedInUserDaoProvider;
  }

  @Override
  public MyReviewRepositoryImpl get() {
    return newInstance(contextProvider.get(), reviewDaoProvider.get(), restaurantServiceProvider.get(), userDaoProvider.get(), restaurantDaoProvider.get(), loggedInUserDaoProvider.get());
  }

  public static MyReviewRepositoryImpl_Factory create(Provider<Context> contextProvider,
      Provider<ReviewDao> reviewDaoProvider, Provider<RestaurantService> restaurantServiceProvider,
      Provider<UserDao> userDaoProvider, Provider<RestaurantDao> restaurantDaoProvider,
      Provider<LoggedInUserDao> loggedInUserDaoProvider) {
    return new MyReviewRepositoryImpl_Factory(contextProvider, reviewDaoProvider, restaurantServiceProvider, userDaoProvider, restaurantDaoProvider, loggedInUserDaoProvider);
  }

  public static MyReviewRepositoryImpl newInstance(Context context, ReviewDao reviewDao,
      RestaurantService restaurantService, UserDao userDao, RestaurantDao restaurantDao,
      LoggedInUserDao loggedInUserDao) {
    return new MyReviewRepositoryImpl(context, reviewDao, restaurantService, userDao, restaurantDao, loggedInUserDao);
  }
}
