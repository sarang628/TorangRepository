// Generated by Dagger (https://dagger.dev).
package com.example.torangrepository.repository.impl;

import android.content.Context;
import com.example.torang_core.data.dao.RestaurantDao;
import com.example.torangrepository.services.RestaurantService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TorangRepository_Factory implements Factory<TorangRepository> {
  private final Provider<Context> contextProvider;

  private final Provider<RestaurantService> restaurantServiceProvider;

  private final Provider<RestaurantDao> restaurantDaoProvider;

  public TorangRepository_Factory(Provider<Context> contextProvider,
      Provider<RestaurantService> restaurantServiceProvider,
      Provider<RestaurantDao> restaurantDaoProvider) {
    this.contextProvider = contextProvider;
    this.restaurantServiceProvider = restaurantServiceProvider;
    this.restaurantDaoProvider = restaurantDaoProvider;
  }

  @Override
  public TorangRepository get() {
    return newInstance(contextProvider.get(), restaurantServiceProvider.get(), restaurantDaoProvider.get());
  }

  public static TorangRepository_Factory create(Provider<Context> contextProvider,
      Provider<RestaurantService> restaurantServiceProvider,
      Provider<RestaurantDao> restaurantDaoProvider) {
    return new TorangRepository_Factory(contextProvider, restaurantServiceProvider, restaurantDaoProvider);
  }

  public static TorangRepository newInstance(Context context, RestaurantService restaurantService,
      RestaurantDao restaurantDao) {
    return new TorangRepository(context, restaurantService, restaurantDao);
  }
}
