// Generated by Dagger (https://dagger.dev).
package com.example.torangrepository;

import com.example.torang_core.data.dao.PictureDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PicturesRepositoryImpl_Factory implements Factory<PicturesRepositoryImpl> {
  private final Provider<RestaurantService> restaurantServiceProvider;

  private final Provider<PictureDao> pictureDaoProvider;

  public PicturesRepositoryImpl_Factory(Provider<RestaurantService> restaurantServiceProvider,
      Provider<PictureDao> pictureDaoProvider) {
    this.restaurantServiceProvider = restaurantServiceProvider;
    this.pictureDaoProvider = pictureDaoProvider;
  }

  @Override
  public PicturesRepositoryImpl get() {
    return newInstance(restaurantServiceProvider.get(), pictureDaoProvider.get());
  }

  public static PicturesRepositoryImpl_Factory create(
      Provider<RestaurantService> restaurantServiceProvider,
      Provider<PictureDao> pictureDaoProvider) {
    return new PicturesRepositoryImpl_Factory(restaurantServiceProvider, pictureDaoProvider);
  }

  public static PicturesRepositoryImpl newInstance(RestaurantService restaurantService,
      PictureDao pictureDao) {
    return new PicturesRepositoryImpl(restaurantService, pictureDao);
  }
}
